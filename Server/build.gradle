buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Booter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    // Dependency: spring-boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    // Dependency end: spring-boot


    // Dependency: Jakarata::JPA
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // Dependency end: Japarata::JPA


    // Dependency: MariaDB-Driver
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    // Dependency end: MariaDB-Driver


    // Dependency: lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    // Dependency end: Lombok


    // Dependency: Modelmapper
    implementation 'org.modelmapper:modelmapper:3.2.2'
    // Dependency end: Modelmapper


    // Dependency: openAPI (st. Swagger-UI) -- v3
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    // Dependency end: openAPI


    // Dependency: Gson
    implementation 'com.google.code.gson:gson:2.12.1'
    // Dependency end: Gson


    // Dependency: Jsckson-datatype
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    // Dependency end: Jackson-datatype


    // Dependency: QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    // Dependency end: QueryDSL
}


// AUTO GENERATE PATH (QueryDSL)
def generated = "/src/main/generated"

sourceSets {
    main.java.srcDirs += [ generated ]
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

clean {
    delete file(generated)
}
